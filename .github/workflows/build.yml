name: Build And Test Reconnection Service
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - chore/update-publishing-pages

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build Next.js
        run: npm run build
  test_jest:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run Jest
        run: npm run test
  check_licenses:
    name: 'Dependency License Check'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: License Check
        # List all the licenses and error out if it is not one of the supported licenses
        run: npx license-report --fields=name --fields=licenseType | jq 'map(select(.licenseType | IN("MIT", "Apache-2.0", "ISC", "BSD-3-Clause", "BSD-2-Clause") | not)) | if length == 0 then halt else halt_error(1) end'

  build-docs:
    name: 'Build Pages Artifact'
    runs-on: ubuntu-latest
    needs: [build, test_jest, check_licenses]
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Generate Swagger UI
        run: npm run generate-swagger-ui
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Publish generated swagger.html to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # Deployment job
  deploy:
    name: 'Deploy to Pages'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
