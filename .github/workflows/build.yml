name: Build And Test Reconnection Service
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
    build_next_js:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "npm"
                  registry-url: "https://registry.npmjs.org"
                  cache-dependency-path: package-lock.json
            - name: Install dependencies
              run: npm ci
            - name: Build Next.js
              run: npm run build
    test_jest:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "npm"
                  registry-url: "https://registry.npmjs.org"
                  cache-dependency-path: package-lock.json
            - name: Install dependencies
              run: npm ci
            - name: Run Jest
              run: npm run test
    check_licenses:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "npm"
                  registry-url: "https://registry.npmjs.org"
                  cache-dependency-path: package-lock.json
            - name: Install dependencies
              run: npm ci
            - name: License Check
              # List all the licenses and error out if it is not one of the supported licenses
              run: npx license-report --fields=name --fields=licenseType | jq 'map(select(.licenseType | IN("MIT", "Apache-2.0", "ISC", "BSD-3-Clause", "BSD-2-Clause") | not)) | if length == 0 then halt else halt_error(1) end'

